<!--
    Powered By nodePPT - This is probably the best web presentation tool so far!
    version: 1.2.3
    site: https://github.com/ksky521/nodePPT
-->
<!doctype html>
<html>
<head>
    <meta charset="UTF-8">
    <title>正则表达式 - By 赵宇翔</title>
    <link rel="stylesheet" media="all" href="./css/nodeppt.css">
    <link rel="stylesheet" media="only screen and (max-device-width: 480px)" href="./css/phone.css">
    <link rel="stylesheet" media="print" href="./css/pdf.css">
    <link rel="stylesheet" href="./js/highlight/styles/monokai_sublime.css">
    <link rel="stylesheet" href="./css/font-awesome.css">
</head>
<body>
<div class="slides">
    <slides id="container">
        <slide class="slide"><section class="slide-wrapper"><article class="flexbox vcenter">
<h1>正则表达式</h1>
<h4>赵宇翔</h4>
<p><br></p>
<h4>微信：<a href="http://p8.qhimg.com/d/inn/c25e09cc/wechat.png" target="_blank">hheedat</a>    微博：<a href="http://weibo.com/zyxcomeon" target="_blank">loadfail</a>    GitHub:<a href="https://github.com/hheedat" target="_blank">hheedat</a></h4>
<p><br>
<img src="./img/wechat.png" alt="wechat"></p>

</article></section></slide>
<slide class="slide"><section class="slide-wrapper"><article class="flexbox vleft">
<h1>主要内容：</h1>
<h2>背景知识</h2>
<h2>JavaScript 和 正则</h2>
<h2>表达式的匹配原理</h2>

</article></section></slide>
<slide class="slide"><section class="slide-wrapper"><article class="flexbox vcenter">
<h1>背景知识</h1>

</article></section></slide>
<slide class="slide"><section class="slide-wrapper"><article class="flexbox vleft">

<h2>1.起源</h2>
<h3>关于正则表达式，最初的想法来自20世纪40年代的两位神经科学家， Warren McCulloch 和 Walter Pitts，他们研究出一种模型，认为神经系统在神经元层面上就是这样工作的。若干年后，数学家 Stephen Kleene 在代数学中正式描述了这种被他称为“正则集合”（regular sets）的模型，正则表达式才成为现实。Stephen 发明了一套简介的表示正则集合的方法，他称之为“正则表达式”（regular expressions）</h3>

</article></section></slide>
<slide class="slide"><section class="slide-wrapper"><article class="flexbox vleft">

<h2>2.流派（flavor）</h2>
<h3>不同工具，不同语言，支持的元字符等特性各有不同；（即使支持的元字符相同，不同流派中，对元字符的理解也可能不同）</h3>

</article></section></slide>
<slide class="slide"><section class="slide-wrapper"><article class="flexbox vcenter">
<h1>JavaScript 和 正则</h1>

</article></section></slide>
<slide class="slide"><section class="slide-wrapper"><article class="flexbox vleft">

<h2>元字符的分类：</h2>
<table>
<thead>
<tr>
<th style="text-align:left">类别</th>
<th style="text-align:left">元字符</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">匹配对象的元字符</td>
<td style="text-align:left">. […] [^…] \char</td>
</tr>
<tr>
<td style="text-align:left">提供计数功能的元字符</td>
<td style="text-align:left">? * + {min,max}</td>
</tr>
<tr>
<td style="text-align:left">匹配位置的元字符</td>
<td style="text-align:left">^ $ \b  ?=  ?!</td>
</tr>
<tr>
<td style="text-align:left">其他元字符</td>
<td style="text-align:left">(…) \1 \2</td>
</tr>
</tbody>
</table>
<p><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Guide/Regular_Expressions" target="_blank">https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Guide/Regular_Expressions</a></p>

</article></section></slide>
<slide class="slide"><section class="slide-wrapper"><article class="flexbox vleft">

<h2>使用正则表达式的方法：</h2>
<table>
<thead>
<tr>
<th style="text-align:left">方法</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">exec</td>
<td style="text-align:left">返回一个数组（未匹配到则返回null）</td>
</tr>
<tr>
<td style="text-align:left">test</td>
<td style="text-align:left">返回true或false</td>
</tr>
<tr>
<td style="text-align:left">match</td>
<td style="text-align:left">返回一个数组或者在未匹配到时返回null</td>
</tr>
<tr>
<td style="text-align:left">search</td>
<td style="text-align:left">返回匹配到的位置索引，或者在失败时返回-1</td>
</tr>
<tr>
<td style="text-align:left">replace</td>
<td style="text-align:left">使用替换字符串替换掉匹配到的子字符串</td>
</tr>
<tr>
<td style="text-align:left">split</td>
<td style="text-align:left">使用正则表达式或者一个固定字符串分隔一个字符串，并将分隔后的子字符串存储到数组中的String方法</td>
</tr>
</tbody>
</table>

</article></section></slide>
<slide class="slide"><section class="slide-wrapper"><article class="flexbox vleft">

<h2>支持的参数</h2>
<table>
<thead>
<tr>
<th style="text-align:left">参数</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">i</td>
<td style="text-align:left">忽略大小写</td>
</tr>
<tr>
<td style="text-align:left">m</td>
<td style="text-align:left">让开始和结束字符（^ 和 $）工作在多行模式 <a href="#9" target="_blank">demo</a></td>
</tr>
<tr>
<td style="text-align:left">g</td>
<td style="text-align:left">全局匹配 <a href="#10" target="_blank">demo</a></td>
</tr>
<tr>
<td style="text-align:left">y</td>
<td style="text-align:left">sticky 粘滞 <a href="#11" target="_blank">demo</a> <a href="#12" target="_blank">demo</a></td>
</tr>
</tbody>
</table>
<p><br>
<img src="./img/compatibility1.png" alt="兼容性视图"></p>

</article></section></slide>
<slide class="slide"><section class="slide-wrapper"><article>
<iframe class="code-iframe" data-src="./demo_2.html" src="about:blank;"></iframe>
</article></section></slide>
<slide class="slide"><section class="slide-wrapper"><article>
<iframe class="code-iframe" data-src="./demo_3.html" src="about:blank;"></iframe>
</article></section></slide>
<slide class="slide"><section class="slide-wrapper"><article>
<iframe class="code-iframe" data-src="./demo_4.html" src="about:blank;"></iframe>
</article></section></slide>
<slide class="slide"><section class="slide-wrapper"><article>
<iframe class="code-iframe" data-src="./demo_5.html" src="about:blank;"></iframe>
</article></section></slide>
<slide class="slide"><section class="slide-wrapper"><article class="flexbox vcenter">
<h1>表达式的匹配原理</h1>

</article></section></slide>
<slide class="slide"><section class="slide-wrapper"><article class="flexbox vleft">

<h2>正则引擎的分类</h2>
<h3>DFA</h3>
<h3>传统型 NFA</h3>
<h3>POSIX NFA</h3>

</article></section></slide>
<slide class="slide"><section class="slide-wrapper"><article>
<p><img src="./img/regular_engine_classify.png" alt="eg"></p>

</article></section></slide>
<slide class="slide"><section class="slide-wrapper"><article class="flexbox vleft">

<h2>两条普世原则：</h2>
<h3>1.优先选择最左端（最靠开头）的匹配结果</h3>
<h3>2.标准的匹配量词 * + ? {m,n} 是匹配优先的</h3>

</article></section></slide>
<slide class="slide"><section class="slide-wrapper"><article class="flexbox vleft">

<h2>正则表达式的应用原理：</h2>
<h3>1.正则表达式编译：检查正则表达式的语法正确性，如果正确，就将其编译为内部形式（internal form）</h3>
<h3>2.传动开始：传动装置将正则引擎“定位”到目标字符串的起始位置。</h3>
<h3>3.元素检测：引擎开始测试正则表达式和文本，依次测试正则表达式的各个元素</h3>
<h3>4.寻找匹配结果：如果找到一个匹配结果，传统型NFA会“锁定”在当前状态，报告匹配成功</h3>
<h3>5.传动装置的驱动过程：如果没有找到匹配，传动装置就会驱动引擎，从文本中的下一个字符开始新一轮的尝试（回到步骤3）</h3>
<h3>6.匹配彻底失败：如果从目标字符串的每一个字符（包括最后一个字符之后的位置）开始的尝试都失败了，就会报告匹配彻底失败。</h3>

</article></section></slide>
<slide class="slide"><section class="slide-wrapper"><article>
<iframe class="code-iframe" data-src="./demo_6.html" src="about:blank;"></iframe>
</article></section></slide>
<slide class="slide"><section class="slide-wrapper"><article>
<p><img src="./img/backtracking.png" alt="backtracking.png"></p>

</article></section></slide>
<slide class="slide"><section class="slide-wrapper"><article class="flexbox vleft">

<h4>回溯的陷阱</h4>
<iframe class="code-iframe" data-src="./demo_7.html" src="about:blank;"></iframe>
</article></section></slide>
<slide class="slide"><section class="slide-wrapper"><article class="flexbox vleft">

<h4>多选结构的陷阱</h4>
<iframe class="code-iframe" data-src="./demo_8.html" src="about:blank;"></iframe>
</article></section></slide>
<slide class="slide"><section class="slide-wrapper"><article class="flexbox vleft">

<h4>多选结构的陷阱</h4>
<iframe class="code-iframe" data-src="./demo_9.html" src="about:blank;"></iframe>
</article></section></slide>
<slide class="slide"><section class="slide-wrapper"><article class="flexbox vleft">

<h3>性能问题</h3>
<iframe class="code-iframe" data-src="./demo_10.html" src="about:blank;"></iframe>
</article></section></slide>
<slide class="slide"><section class="slide-wrapper"><article class="flexbox vleft">

<h2>常识性优化</h2>
<h3>避免重新编译</h3>
<h3>使用非捕获型括号 (?: )</h3>
<h3>不要滥用括号 (.)*</h3>
<h3>不要滥用字符组 ^.* [:]</h3>
<h3>使用起始锚点</h3>

</article></section></slide>
<slide class="slide"><section class="slide-wrapper"><article class="flexbox vleft">

<h2>一些关于优化的关键字</h2>
<iframe class="code-iframe" data-src="./demo_word.html" src="about:blank;"></iframe>
</article></section></slide>
<slide class="slide"><section class="slide-wrapper"><article class="flexbox vleft">
<h3>参考资料:</h3>

<h3><a href="http://book.douban.com/subject/2154713/" target="_blank">《精通正则表达式》</a></h3>
<h3><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Guide/Regular_Expressions" target="_blank">https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Guide/Regular_Expressions</a></h3>
<h3><a href="http://www.cnblogs.com/ziyunfei/archive/2012/12/07/2807313.html" target="_blank">http://www.cnblogs.com/ziyunfei/archive/2012/12/07/2807313.html</a></h3>
<h3><a href="http://regexper.com/" target="_blank">http://regexper.com/</a></h3>

</article></section></slide>
<slide class="slide"><section class="slide-wrapper"><article class="flexbox vcenter">
<h1>Q&amp;A</h1>

</article></section></slide>
<slide class="slide"><section class="slide-wrapper"><article class="flexbox vcenter">
<h1>THANK U</h1>

</article></section></slide>
        <!--slide class="slide thank-you-slide segue nobackground">
            <article class="flexbox vleft auto-fadein">
                <h2>Q &amp; A</h2>
                <h3>&lt;Thank You!&gt;</h3>
            </article>
        </slide-->
        <slide class="slide logoslide dark nobackground">
            <article class="flexbox vcenter">
              <h2 style="color: white;">Powered By nodePPT v1.2.3</h2>
            </article>
          </slide>
        <div class="slideTip" id="tip"></div>
    </slides>
</div>
<canvas id="drawBoard" class="draw-board" width="900" height="700"></canvas>
<div class="progress"><span id="progress"></span></div>
<div id="_buttons">
    <div class="_btn-box" id="_btn-box" style="display:none;">
        <button class="fa fa-arrow-circle-left" id="_btn-prev"></button>
        <button class="fa fa-arrow-circle-right" id="_btn-next"></button>
        <button class="fa fa-paint-brush" id="_btn-brush"></button>
        <button class="fa fa-compress" id="_btn-overview" data-toggle="fa fa-expand"></button>
    </div>
    <button class="fa fa-bars" id="_btn-bar"  data-toggle="fa fa-close"></button>
</div>
<script src="./js/mixjs/lib/mix.0.3.0.min.js"></script>
<script>
var base = location.protocol + '//' + location.host;

var path = location.pathname.split('/').filter(function(v){
    return !!v;
});
path.pop();
path = path.join('/');
MixJS.config({
    baseURL: [ base, path, 'js'].join('/')+'/'
});

</script>
<script src="./js/mixjs/lib/event/broadcast.js"></script>
<script src="./js/nodeppt.js"></script>
<script>
Slide.init({
    containerID: 'container',
    drawBoardID: 'drawBoard',
    slideClass: '.slide',
    buildClass: '.build',
    progressID: 'progress',
    transition: 'slide2',
    width: 1100,
    dir: './',
    
    //打开下面的注释就开启postMessage方式
    //访问网址127.0.0.1:8080/ppt/demo#client
    control:{
        type: 'postMessage',
        args:{
            isControl:  false
        }
    },
    
    tipID: 'tip'
});
MixJS.loadJS('highlight/hljs-0.8.js',function(){
    hljs.tabReplace = '  ';
    hljs.initHighlightingOnLoad();
});
</script>
<script src="./js/all.js"></script>
<link rel="stylesheet" href="./css/slide.css">
<link rel="stylesheet" href="./css/theme.dark.css">
<!--placeholder-->
</body>
</html>
